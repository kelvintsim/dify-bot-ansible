---
- name: Install Docker and Docker Compose
  hosts: all
  become: yes
  tasks:
    - name: Install Dependency
      apt:
        state: present
        update_cache: yes
      loop:
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg-agent
        - software-properties-common

    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable
        state: present

    - name: Install Docker
      apt:
        name: docker-ce
        state: present
        update_cache: yes

    - name: Add Docker Compose binary
      get_url:
        url: https://github.com/docker/compose/releases/download/v2.18.1/docker-compose-Linux-x86_64
        dest: /usr/local/bin/docker-compose
        mode: "a+x"

    - name: Install Python packages
      apt:
        name:
          - python3-pip
        state: present
        update_cache: yes

    - name: Install Docker Python module
      pip:
        name: docker
        executable: pip3

- name: Deploy LC App
  hosts: all
  become: yes
  tasks:
    # - name: Install Python packages
    #   pip:
    #     name:
    #       - fastapi
    #       - uvicorn
    #       - typing
    #       - pydantic
    #       - python-dotenv
    #       - python-multipart
    #       - psycopg2-binary
    #     executable: pip3

    - name: Clone the GitHub repository
      git:
        repo: "https://github.com/langgenius/dify.git"
        dest: /opt/langgenius-dify

    # - name: Write ENV_FILE to .env file
    #   copy:
    #     content: "{{ ENV_FILE }}"
    #     dest: /opt/azure-openai-langchain-bot/.env

    - name: Start dify
      command: docker-compose -f /opt/langgenius-dify/docker/docker-compose.yaml up -d

    # - name: Wait for DB to be up
    #   wait_for:
    #     host: localhost
    #     port: 5432
    #     delay: 5
    #     timeout: 300
    #     state: started

    # - name: Start Service
    #   shell: |
    #     cd /opt/azure-openai-langchain-bot/
    #     docker-compose up -d

    # - name: Start Admin API
    #   shell: |
    #     cd /opt/azure-openai-langchain-bot
    #     nohup uvicorn adminapi:app --host 0.0.0.0 --port 8100 --reload &
    #   args:
    #     executable: /bin/bash

    # - name: Start Admin API
    #   shell: |
    #     cd /opt/azure-openai-langchain-bot
    #     if sudo lsof -t -i tcp:8100; then sudo lsof -t -i tcp:8100 | sudo xargs kill -9; fi
    #     nohup uvicorn adminapi:app --host 0.0.0.0 --port 8100 --reload &
    #   args:
    #     executable: /bin/bash
# - name: Deploy Admin UI
#   hosts: all
#   become: yes
#   tasks:
#     - name: Install Node.js 18.x
#       shell: |
#         sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 7EA0A9C3F273FCD8
#         curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
#         sudo DEBIAN_FRONTEND=noninteractive apt-get install -y nodejs

#     - name: Clone the Admin UI GitHub repository
#       git:
#         repo: "https://github.com/somethingwentwell/langchain-bot-admin-ui.git"
#         dest: /opt/langchain-bot-admin-ui

#     - name: Build Admin UI
#       environment:
#         HOST_URL: "{{ HOST_URL }}"
#       shell: |
#         cd /opt/langchain-bot-admin-ui
#         docker build --build-arg HOST_URL=$HOST_URL . -t langchain-bot-admin-ui

#     - name: Run Admin UI
#       shell: |
#         cd /opt/langchain-bot-admin-ui
#         docker run -d -p 8080:4000 --name admin-ui langchain-bot-admin-ui
